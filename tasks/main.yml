# tasks file for azure-driver
- import_role:
    name: oasis_roles.system_repositories
  vars:
    system_repositories_configs:
      - name: azure-cli
        baseurl: https://packages.microsoft.com/yumrepos/azure-cli
        gpgcheck: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc

- name: Install Azure CLI
  package:
    name: azure-cli
    state: present

- name: Install jq
  package:
    name: jq
    state: present

- name: Ensure Azure credential folder exists
  file:
    path: "~/.azure/"
    state: directory

# These json files allow us to skip the az login interactive step.
- name: Copy json files to ~/.azure
  copy:
    src: "{{ lookup('env', 'WORKSPACE') }}\
/scenario/css_openshift/config/ansible/roles/azure_infra/files/{{ item }}"
    dest: "~/.azure/{{ item }}"
  with_items:
    - azureProfile.json
    - accessTokens.json

# We can't guarantee the SP will be the same, so let's pull a new one every run
# and update the credentials file
- name: Get new service principal secret
  command: "az ad sp create-for-rbac --role Contributor \
            --name {{ azure_sp_name }}"
  register: command_result
  changed_when: command_result.rc == 0

- name: Get Service Principal password
  set_fact:
    azure_sp_password: "{{ (command_result.stdout | from_json).password }}"

- name: Get Service Principal Client ID
  set_fact:
    azure_sp_client_id: "{{ (command_result.stdout | from_json).appId }}"

- name: Configure credentials file
  template:
    src: templates/azure_creds_file.j2
    dest: ~/.azure/credentials
    mode: '0755'

- name: Generate Service Principal file for installer
  template:
    src: templates/sp_file.j2
    dest: ~/.azure/osServicePrincipal.json
    mode: '0600'

- name: Add permissions required for Azure cloud Credential Minter
  command: "az ad app permission add --id {{ azure_sp_client_id }} \
            --api 00000002-0000-0000-c000-000000000000 \
            --api-permissions 824c81eb-e3f8-4ee6-8f6d-de7f50d565b7=Role"
  register: command_result
  changed_when: command_result.rc == 0

- name: Grant app permissions to SP Client
  command: "az ad app permission grant --id {{ azure_sp_client_id }}\
            --api 00000002-0000-0000-c000-000000000000"
  register: command_result
  changed_when: command_result.rc == 0

- name: Assign the user Access Admin role
  shell: |
         set -o pipefail
         "az role assignment create --role \"User Access Administrator\"\
          --assignee-object-id $(az ad sp list \
          --filter \"appId eq '{{ azure_sp_client_id }}'\" \
          | jq '.[0].objectId' -r)"
  register: command_results
  changed_when: command_result.rc == 0

- name: Install some libaries the azure modules require
  pip:
    name:
      - packaging
      - ansible[azure]
      - futures
    state: present
    extra_args: --ignore-installed
